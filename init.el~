(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(column-number-mode t)
 '(company-auto-complete (quote ignore))
 '(company-idle-delay 0)
 '(company-minimum-prefix-length 2)
 '(company-show-numbers (quote (quote left)))
 '(company-tooltip-idle-delay 0.2)
 '(custom-safe-themes
   (quote
    ("c74e83f8aa4c78a121b52146eadb792c9facc5b1f02c917e3dbb454fca931223" default)))
 '(display-battery-mode t)
 '(display-line-numbers-type (quote visual))
 '(display-time-mode t)
 '(global-company-mode t)
 '(global-display-line-numbers-mode t)
 '(ido-enable-flex-matching t)
 '(ido-everywhere t)
 '(ido-mode (quote both) nil (ido))
 '(js-indent-level 2)
 '(menu-bar-mode nil)
 '(org-adapt-indentation t)
 '(org-babel-load-languages
   (quote
    ((emacs-lisp . t)
     (shell . t)
     (js . t)
     (ruby . t)
     (awk . t))))
 '(org-default-notes-file "~/org/home/minall/notes.org")
 '(package-selected-packages
   (quote
    (wallpaper all-the-icons dashboard rjsx-mode projectile aggressive-indent exwm xelb use-package rvm ruby-electric gruvbox-theme emmet-mode company-web)))
 '(ring-bell-function (quote ignore))
 '(scroll-bar-mode nil)
 '(show-paren-mode t)
 '(size-indication-mode t)
 '(tool-bar-mode nil)
 '(tooltip-mode nil)
 '(wallpaper-cycle-directory "~/Pictures/wallpaper" nil nil "Customized with use-package wallpaper")
 '(wallpaper-cycle-interval 5 nil nil "Customized with use-package wallpaper")
 '(wallpaper-cycle-mode t)
 '(wallpaper-cycle-single t nil nil "Customized with use-package wallpaper"))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(company-echo ((t (:inherit nil :stipple nil))) t)
 '(company-echo-common ((t (:foreground "LemonChiffon"))))
 '(company-preview ((t (:background "dark gray" :foreground "seashell4"))))
 '(company-template-field ((t (:background "light coral" :foreground "LemonChiffon4"))))
 '(company-tooltip ((t (:background "PeachPuff4" :foreground "black"))))
 '(company-tooltip-common ((t (:foreground "lavender"))))
 '(company-tooltip-selection ((t (:background "indian red")))))

(package-initialize)
(add-to-list 'package-archives
             '("melpa-stable" . "https://stable.melpa.org/packages/") t)

(unless (package-installed-p 'use-package)
  (package-refresh-contents)
  (package-install 'use-package))
;; USE THIS ONLY ONCE, generates init.el file
;; (org-babel-load-file (expand-file-name "~/.emacs.d/init.org"))

(defun toggle-transparency ()
  (interactive)
  (let ((alpha (frame-parameter nil 'alpha)))
    (set-frame-parameter
     nil 'alpha
     (if (eql (cond ((numberp alpha) alpha)
                    ((numberp (cdr alpha)) (cdr alpha))
                    ;; Also handle undocumented (<active> <inactive>) form.
                    ((numberp (cadr alpha)) (cadr alpha)))
              100)
         '(90 . 90) '(100 . 100)))))
(global-set-key (kbd "C-c t") 'toggle-transparency)

(use-package gruvbox-theme
  :ensure t)

(use-package smart-mode-line
  :ensure t)

(use-package aggressive-indent
  :ensure t)

(use-package dashboard
  :ensure t
  :init
  (progn
    (setq dashboard-items '((recents . 5)
			    (projects . 3)))
    (setq dashboard-center-content t)
    (setq dashboard-set-file-icons t)
    )
  :config
  (dashboard-setup-startup-hook))


(use-package all-the-icons
  :ensure t)

(use-package smartparens
  :ensure t)

(use-package smex
  :ensure t)

(use-package system-packages
  :ensure t)

(use-package system-packages
  :ensure t)

(use-package bluetooth
  :ensure t)

(use-package sudo-edit
  :ensure t)

(use-package flycheck
  :ensure t
  :init (global-flycheck-mode))

(require 'smex)
(smartparens-global-mode 1)
(smex-initialize)
(global-set-key (kbd "M-x") 'smex)
(ido-grid-mode 1) ; If installed
(global-aggressive-indent-mode 1)
(setq sml/theme 'respectful)
(sml/setup)
(require 'desktop-environment)
(desktop-environment-mode)
(require 'sudo-edit)
(global-set-key (kbd "C-c C-r") 'sudo-edit)

(use-package company
  :ensure t
  :init (global-company-mode))

(use-package company-web
  :ensure t
  :config
  (add-to-list 'company-backends 'company-web-html)
  (add-to-list 'company-backends 'company-web-jade)
  (add-to-list 'company-backends 'company-web-slim)
  :hook company)

(use-package projectile
  :ensure t
  :config
  (define-key projectile-mode-map (kbd "s-p") 'projectile-command-map)
  (projectile-mode +1))

(use-package emmet-mode
  :ensure t
  :init
  (setq emmet-indentation 2)
  (setq emmet-move-cursor-between-quotes t)
  :hook ((css-mode) (sgml-mode)))

(use-package rjsx-mode
  :ensure t)

(use-package ruby-electric 
  :ensure t
  :hook (ruby-mode . ruby-electric-mode))

(use-package ruby-mode
  :ensure t)

(use-package rvm
  :ensure t)

(use-package exwm
  :ensure t)
(require 'exwm)
(require 'exwm-config)
(require 'exwm-systemtray)
(exwm-config-default)
(exwm-systemtray-enable)
